name: Wireshark

on:
  push:
    branches:
      - gha-*
  pull_request:
    branches:
      - gha-*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TRIGGERING_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}\vcpkg\installed

jobs:

  wireshark_w19-release:

    runs-on: windows-2019

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
    - name: checkout Wireshark
      shell: cmd
      run: |
        git clone -q -b release-3.6 --depth=1 https://gitlab.com/wireshark/wireshark.git
        cd wireshark
        for /f %%x in ('git rev-parse HEAD') do @echo WIRESHARK_COMMIT=%%x>> %GITHUB_ENV%
    - name: get compiler version
      shell: bash
      run: |
        export COMPILER_VERSION=$("C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -property catalog_productDisplayVersion)
        echo "COMPILER_VERSION=$COMPILER_VERSION" >> $GITHUB_ENV
    - name: Cache Artifact
      id: cache-artifact
      uses: actions/cache@v3
      with:
        path: ${{ github.job }}.tar.xz
        key: c02_${{ github.job }}_${{ env.WIRESHARK_COMMIT }}_${{ env.COMPILER_VERSION }}
    - name: setup for run-vcpkg
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo '{ "name": "opendds", "version-string": "github-actions", "dependencies": [ "qt5-winextras", "qt5-tools", "qt5-svg", "qt5-multimedia", "qt5-declarative" ] }' > vcpkg.json
    - name: install vcpkg packages
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      id: runvcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: f6a5d4e8eb7476b8d7fc12a56dff300c1c986131
        runVcpkgInstall: true
    - name: checkout WinFlexBison
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: lexxmark/winflexbison
        path: winflexbison
        ref: v2.5.24
    - name: set up msvc env
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
    - name: copy CMakePresets for WinFlexBison
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: copy OpenDDS\.github\workflows\WinFlexBison_CMakePresets.json winflexbison\CMakePresets.json
    - name: build WinFlexBison
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: winflexbison/CMakeLists.txt
        configurePreset: config1
        buildPreset: build1
    - name: set Wireshark environment and copy CMakePresets
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        echo WIRESHARK_LIB_DIR=%CD%\wireshark-win64-libs-3.6>> %GITHUB_ENV%
        echo QT5_BASE_DIR=${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}\installed\x64-windows>> %GITHUB_ENV%
        echo WIRESHARK_BUILD_DIR=${{ github.workspace }}\wsbuild>> %GITHUB_ENV%
        echo WINFLEXBISON_ROOT=${{ github.workspace }}\winflexbison>> %GITHUB_ENV%
        type %GITHUB_ENV%
        copy OpenDDS\.github\workflows\Wireshark_CMakePresets.json wireshark\CMakePresets.json
    - name: build Wireshark
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: wireshark/CMakeLists.txt
        configurePreset: config1
        buildPreset: build1
    - name: create Wireshark artifact
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        find -iname "*\.obj" -delete
        tar cvhf ${{ github.job }}.tar wireshark wsbuild wireshark-win64-libs-3.6
        xz -3 ${{ github.job }}.tar
    - name: upload Wireshark artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz
